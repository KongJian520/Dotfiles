#################################
#             Shadows           #
#################################

# 在窗口上启用客户端阴影。请注意，桌面窗口
# (具有 '_NET_WM_WINDOW_TYPE_DESKTOP' 的窗口) 永远不会有阴影，
# 除非使用 wintypes 选项明确请求。
#
# 可以使用规则为每个窗口设置。
#
# 默认值: false
shadow = true;

# 阴影的模糊半径，以像素为单位。
#
# 默认值: 12
shadow-radius = 7;

# 阴影的不透明度。
#
# 范围: 0.0 - 1.0
# 默认值: 0.75
# shadow-opacity = .75

# 阴影的左偏移量，以像素为单位。
#
# 默认值: -15
shadow-offset-x = -7;

# 阴影的顶部偏移量，以像素为单位。
#
# 默认值: -15
shadow-offset-y = -7;

# 阴影的十六进制字符串颜色值。格式如 "#RRGGBB"，例如 "#C0FFEE"。
#
# 默认值: #000000
# shadow-color = "#000000"

# 将完全位于特定监视器上的窗口的阴影裁剪到该监视器。这是
# 目前使用 X RandR 扩展实现的。
#
# 默认值: false
# crop-shadow-to-monitor = false


#################################
#           Fading              #
#################################

# 在打开/关闭窗口以及不透明度变化时淡入/淡出窗口，
# 除非使用 no-fading-openclose。可以使用规则为每个窗口设置。
#
# 默认值: false
fading = true;

# 淡入时每步的不透明度变化。(0.01 - 1.0，默认值为 0.028)
fade-in-step = 0.03;

# 淡出时每步的不透明度变化。(0.01 - 1.0，默认值为 0.03)
fade-out-step = 0.03;

# 淡入淡出步骤之间的时间，以毫秒为单位。(> 0，默认值为 10)
# fade-delta = 10

# 不在窗口打开/关闭时淡入淡出。
# no-fading-openclose = false

# 不淡出带有 WM 框架的已销毁 ARGB 窗口。解决 Openbox、Fluxbox 等中的错误。
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################

# 窗口标题栏和边框的不透明度。
#
# 范围: 0.1 - 1.0
# 默认值: 1.0 (禁用)
frame-opacity = 0.7;

# 使用固定的非活动窗口暗淡值，而不是根据窗口不透明度进行调整。
#
# 默认值: false
# inactive-dim-fixed = true

#################################
#           Corners             #
#################################

# 设置圆角窗口的半径。当 > 0 时，合成器将
# 使窗口的角变圆。与 `transparent-clipping` 交互不佳。
#
# 默认值: 0 (禁用)
corner-radius = 0

#################################
#            Blur               #
#################################

# 背景模糊的参数，请参阅手册页中的 BLUR 部分以获取更多信息。
# blur-method =
# blur-size = 12
#
# blur-deviation = false
#
# blur-strength = 5

# 模糊半透明 / ARGB 窗口的背景。
# 可以使用规则为每个窗口设置。
#
# 默认值: false
# blur-background = false

# 当窗口框架不透明时模糊窗口背景。
# 意味着:
#    blur-background
#
# 默认值: false
# blur-background-frame = false

# 使用固定的模糊强度，而不是根据窗口不透明度进行调整。
#
# 默认值: false
# blur-background-fixed = false


# 指定模糊卷积核，格式如下:
# 示例:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
# 也可以是预定义的内核，请参阅手册页。
#
# 默认值: ""
blur-kern = "3x3box";

#################################
#       General Settings        #
#################################

# 启用通过 D-Bus 进行远程控制。请参阅手册页以获取更多详细信息。
#
# 默认值: false
# dbus = true

# 守护进程化进程。初始化后分叉到后台。会导致某些（编写不良的）驱动程序出现问题。
# daemon = false

# 指定要使用的后端: `xrender`、`glx` 或 `egl`。
#
# 默认值: "xrender"
backend = "glx"

# 在渲染期间使用更高的精度，并在呈现屏幕时应用抖动。减少条带伪影，但可能导致性能
# 降低。仅适用于 OpenGL。
dithered-present = false;

# 启用/禁用 VSync。
#
# 默认值: false
vsync = true;

# 尝试检测具有圆角的窗口，并且不要将它们视为
# 形状窗口。不幸的是，准确性不是很高。
#
# 与 `corner-radius` 无关。
#
# 默认值: false
detect-rounded-corners = true;

# 检测客户端窗口上的 '_NET_WM_WINDOW_OPACITY'，对于不传递客户端窗口的 '_NET_WM_WINDOW_OPACITY' 到框架窗口的窗口管理器很有用。
#
# 默认值: false
detect-client-opacity = true;

# 使用 EWMH '_NET_ACTIVE_WINDOW' 来确定当前聚焦的窗口，
# 而不是监听 'FocusIn'/'FocusOut' 事件。可能更准确，
# 前提是 WM 支持它。
#
# 默认值: false
# use-ewmh-active-win = false

# 如果检测到全屏不透明窗口，则取消重定向所有窗口，
# 以最大化全屏窗口的性能。已知在重定向/取消重定向窗口时会导致闪烁。
#
# 默认值: false
# unredir-if-possible = false

# 取消重定向窗口之前的延迟，以毫秒为单位。
#
# 默认值: 0.
# unredir-if-possible-delay = 0

# 使用 'WM_TRANSIENT_FOR' 将窗口分组，并将同一组中的窗口视为同时聚焦。
#
# 默认值: false
detect-transient = true;

# 使用 'WM_CLIENT_LEADER' 将窗口分组，并将同一组中的窗口视为同时聚焦。这通常意味着来自同一应用程序的窗口
# 将被视为同时聚焦或未聚焦。如果启用了 detect-transient，'WM_TRANSIENT_FOR' 具有更高优先级。
#
# 默认值: false
# detect-client-leader = false

# 使用损坏信息进行渲染。这会导致每次只重绘实际更改的屏幕部分，而不是整个屏幕。应该提高性能。
#
# 默认值: false
use-damage = true;

# 使用 X Sync 栅栏等待其他窗口的渲染完成，
# 然后再使用它们的内容来渲染当前屏幕。
#
# 对于显式同步驱动程序（如 nvidia）是必需的。
#
# 默认值: false
# xrender-sync-fence = false

# GLX 后端: 使用指定的 GLSL 片段着色器渲染窗口
# 内容。请参阅手册页以获取接口的详细说明。
#
# 可以使用规则为每个窗口设置。
#
# window-shader-fg = "default"

# 强制所有窗口使用混合进行绘制。如果你有一个 `window-shader-fg` 可能会使不透明像素变透明，这很有用。
#
# 默认值: false
# force-win-blend = false

# 不使用 EWMH 检测全屏窗口。
# 恢复为仅根据窗口的大小和坐标检查窗口是否为全屏。
#
# 默认值: false
# no-ewmh-fullscreen = false

# 调暗亮窗口，使其亮度不超过此设置值。
# 窗口的亮度通过平均窗口中的所有像素来估算，
# 因此这可能会带来性能损失。
# 将此设置为 1.0 禁用此行为。需要禁用 --use-damage。
#
# 默认值: 1.0 (禁用)
# max-brightness = 1.0

# 使透明窗口像非透明窗口一样剪裁其他窗口，
# 而不是在它们上面混合。例如，将透明窗口放在另一个窗口上面将会在该窗口中剪出一个“洞”，并显示下面的桌面背景。
#
# 默认值: false
# transparent-clipping = false

# 设置日志级别。可能的值是:
#  "trace", "debug", "info", "warn", "error"
# 按重要性递增。不区分大小写。
# 如果使用 "TRACE" 日志级别，最好将日志记录到文件中
# 使用 *--log-file*，因为它可以生成大量日志流。
#
# 默认值: "warn"
# log-level = "warn";

# 设置日志文件。
# 如果从未指定 *--log-file*，日志将写入 stderr。
# 否则，日志将写入给定文件，尽管一些早期
# 日志可能仍会写入 stderr。
# 从配置文件设置此选项时，建议使用绝对路径。
#
# log-file = "/path/to/your/log/file"

# 将进程 ID 写入文件。
# write-pid-path = "/path/to/your/log/file"

# 基于规则的每窗口选项。
#
# 请参阅手册页中的 WINDOW RULES 部分了解这些如何工作。
rules: ({
  match = "window_type = 'tooltip'";
  fade = false;
  shadow = true;
  opacity = 0.75;
  full-shadow = false;
}, {
  match = "window_type = 'dock'    || "
          "window_type = 'desktop' || "
          "_GTK_FRAME_EXTENTS@";
  blur-background = false;
}, {
  match = "window_type != 'dock'";
  # shader = "my_shader.frag";
}, {
  match = "window_type = 'dock' || "
          "window_type = 'desktop'";
  corner-radius = 0;
}, {
  match = "name = 'Notification'   || "
          "class_g = 'Conky'       || "
          "class_g ?= 'Notify-osd' || "
          "class_g = 'Cairo-clock' || "
          "_GTK_FRAME_EXTENTS@";
  shadow = false;
})

# `@include` 指令可用于包含其他配置文件。
# 相对路径在此配置文件的父目录中搜索
# (当通过符号链接加载配置时，符号链接将首先解析)。或者在 `$XDG_CONFIG_HOME/picom/include` 中。
#
# @include "extra.conf"
@include "rule.conf"